/*:
## 標準資料庫以外

 程式設計師還可以在標準資料庫中透過組合及新增類型和功能，來建立他們自己的類型。隨著課程的進展，你將建立自己的類型。

 - callout(實驗：): 
 挑出你在上一頁實驗中建立的某個類型，想像一下可以依據哪些類型對它進行定義。舉例來說，`TrainingShoe` 可能使用 `Int` 作為尺寸，使用 `String` 作為品牌名稱，使用 `Date` 作為發布日期，並使用另一個 `Int` 作為價格。

 類型和功能可以一起分類到「架構」或「資料庫」的集合中。你在製作 app 時，可以從 Xcode 隨附的架構中挑選。其中非常重要的架構是 「Foundation」架構。
 
 Foundation 架構引入了許多類型，用來代表比 Swift 標準資料庫中的字串或數字更具體的類型。例如，有用於日期、距離和電腦上檔案的類型。
 
 這些額外的架構不會自動新增到你的程式中，因為你可能不需要它們。這就好像是你要去購物中心轉一圈，沒必要帶上所有東西一樣。
 
 在下一頁中，你會學習如何將架構新增到程式中。 
 
[上一頁](@previous)  |  第 10 頁，共 13 頁  |  [下一頁：匯入架構](@next)
 */