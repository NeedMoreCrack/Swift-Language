/*:
## 類型安全

 你已經看到，嘗試將錯誤類型的值指定給變數會導致錯誤。事實上，Swift 不會讓你使用錯誤或非預期的類型來編寫程式碼。這稱為「類型安全」，避免你在編碼過程可能產生的各種錯誤。
 
 此外，當你嘗試新增不同類型的值時，類型安全也會出來大顯身手。

 - callout(實驗：): 將上面每一行程式碼取消註解，並檢查其產生的錯誤。一次只能取消註解一行，因為 Playground 將在發現第一個錯誤時停止執行。
 */
//"banana" + 1
//2 + "2"
/*:
 錯誤內容如下所示：

 `Binary operator '+' cannot be applied to operands of type 'String' and 'Int'`.
 
 這個有點嚇人的句子陳述了一些非常簡單的事：

- `Binary operator '+'`：你之前學過的 `+` 加號運算子稱為「二進位運算子」。二進位運算子預期其左右兩側都有內容。
- `cannot be applied to operands`：使運算子有效的東西叫做「運算元」，例如「香蕉」字串和整數 2。
- `of type 'String' and 'Int'`：`+` 加號左右兩邊的東西一個是 `String` 一個是 `Int`。`+` 加號不知道該如何加總這兩個東西。那「你」知道嗎？

 - callout(練習：): 編寫更多不正確的加法語句。編寫每一行語句之前，猜猜看會發生什麼錯誤。記得先將之前實驗的程式碼轉成註解。
 */

/*:
接下來，我們來了解 Swift 如何判斷你在建立值時所指定的類型。

[上一頁](@previous)  |  第 5 頁，共 13 頁  |  [下一頁：類型和字面值](@next)
 */