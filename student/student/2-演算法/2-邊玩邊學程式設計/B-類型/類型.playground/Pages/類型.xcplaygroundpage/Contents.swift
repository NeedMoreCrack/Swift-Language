/*:
## 類型
 在 Swift 中，每個值都具有「類型」。
 
 就像日常生活中事物的類型一樣，Swift 中的每種類型都具有自己的一套屬性和行為。

 你已經使用了兩種不同類型的值：

- 像是 `"Hello"` 和 `"Wimbledon"`的字串
- 像是 `101` and `-10` 的數字
 */
let string = "I am a string"
let number = 12
//: 你也已經發現這些類型的表現是不同的。例如，將它們加在一起時會出現什麼情況？
1 + 1 // Equals 2
"1" + "1" // Equals "11"
/*:
 在 Swift 中，很容易理解的，字串的類型就是 `String`。
 
 你一直在使用的數字類型稱為 `Int`，即整數的縮寫。`Int` 值是沒有小數部分的整數。`Int` 可以是正數、負數或零。
 
 到目前為止，你只學過兩種類型，接下來將會學到更多類型。了解如何使用不同的類型，甚至建立自己的新類型，是學習程式設計關鍵的一環。
 
 想像一個工具箱，裡面有套筒扳手、螺絲起子、鉗子、錘子。每種類型的工具都只適合於某些特定的任務，而對於其他任務卻毫無用處。每次你學習如何在 Swift 中使用一種新的類型時，都是在向你的程式設計工具箱中加入新工具。
 
 花點時間想像一件你最喜歡的襯衫，然後繼續學習下一頁。
 
[上一頁](@previous)  |  第 2 頁，共 13 頁  |  [下一頁：最喜歡的襯衫](@next)
 */