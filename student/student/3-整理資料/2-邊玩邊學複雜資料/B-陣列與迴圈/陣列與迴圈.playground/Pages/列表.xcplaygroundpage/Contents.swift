/*:
## 列表

 人們隨時都在使用列表。你可能會有一份待辦事項列表、願望列表、音樂播放列表，甚至遺願列表。列表非常有用，在編寫程式時也很常見。
 
 當你學習字串時，在一些練習中製作了事項列表。你製作列表的方式是使用 `\n` 新行字元將多個字串結合在一起。

 - callout(範例：): \
`let shoppingList = "Eggs" + "\n" + "Tomatoes" + "\n" + ...`

 此程式碼在畫面上完美顯示一份列表，除此之外別無其他。思考一下你可能會想要利用列表來完成的一些其他事：

- 如何在無須重新輸入列表每個成員的情況下，就能對成員呼叫函數？
- 如何確認你是否已將一些項目新增至列表？
- 如果你的列表已擴增至有數百個項目，是否能夠輕鬆移除名為「Tomatoes」的項目？
- 如果你的列表不是由 `String` 值所組成，而是其他值所組成 (例如你想要累加的價目表)，會是什麼狀況？
- 第一件事是什麼？最後一件事是什麼？第 24 件事是什麼？
- 有多少件事在列表中？
- 你要如何重新排列列表？

 在 Swift 中，列表稱做「陣列」。這是一個重要的「資料抽象」，這種方法能將一個概念 (例如列表) 作為一個單位來思考，而不必考慮其所有的個別元素。陣列 (例如所有的資料抽象) 可為上述所有的困境提供解決方案，進而簡化你的程式碼。
 
  回想任何一個你曾經使用過、在其中捲動瀏覽事項列表的 iOS app。該 app 一定使用了陣列。
  
 在此課程中，你將學習製作和使用陣列的方式。

第 1 頁，共 18 頁  |  [下一頁：陣列字面值](@next)
 */