/*:
## 總結

每個 app 都有一個能呈現其所用資料的模型。你可在 Swift 中定義自己的類型，用對你 app 最佳的方式來編排資料。建立自訂類型的其中一種方式為定義結構。

結構是一種可集合屬性與方法的類型。有些屬性中包含資料，例如變數或常數。其他的則傳回計算的數值。結構的方法提供操作其屬性的函數。

你可建立並使用自訂類型的實例，方法和 Swift 中任何其他類型相同。你使用自訂類型的方式和任何其他類型都相同，包括作為函數參數和傳回類型。
 
結構是完成資料抽象概念的基本方式。幾乎所有你撰寫的程式碼多少都會使用到結構，且你經常會發現需要建立自訂的程式碼。如此一來，使用程式碼變得更容易；這可將相關資料的詳細資訊和函數全都封裝成一個實體，以隔開這些詳細資訊和使用它們的程式碼。當你使用結構的實例時，你不須考量每一個細微部份；只須考量結構所呈現的概念即可，像是一首歌或一個矩形。

接著，請設計和建構一些屬於自己的結構。

[上一頁](@previous)  |  第 9 頁，共 10 頁  |  [下一頁：你自己的結構](@next)
 */