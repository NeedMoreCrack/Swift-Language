/*:
## 參數名稱和引數標籤

 在上一頁中，你看到了如何改變函數的定義，讓函數具有明確的目的，並且讀起來像一個句子。但是，這麼做又帶來了另外一個問題。

 - callout(範例：): \
` func printHello(to: String) {`\
` `    `print ("Hello " + to)`\
` }`\
` printHello(to: "Chris")`

 現在，函數中的常數名稱為 `to`，但是，這個名稱不符合你學過的有關適當名稱的任何規則。
 
 對於像上面這樣的簡單函數來說，這確實不是什麼重要的問題。但你會發現，讀取較長的程式碼時，把 `to` 當名稱使用會令人感到混亂。
 
 若要解決這個問題，可以為函數中的參數使用不同的名稱：
 */
func printHello(using friendName: String) {
    print("Hello " + friendName)
}
printHello(using: "Chris")
printHello(using: "Johnny")
/*:
 這個參數被命名了兩次。你在呼叫函數時會看到第一個名稱，而在函數主體內則使用另一個名稱。
 
 事實上，可以使用更好的單字來代表這兩個名稱。呼叫函數 (並傳入一或多個引數) 時看到的名稱稱為「引數標籤」。 
 
 在函數內使用的名稱 (已接收的值) 是參數名稱。

 - callout(實驗：): 嘗試在上述函數中變更引數標籤和參數名稱。請注意，變更引數標籤時，必須更新呼叫函數的所在之處。還要注意，變更參數名稱時，必須更新函數的主體。

 你可能記得 `print()` 函數沒有引數標籤。接下來，我們來學習如何處理這樣的情況。
 
[上一頁](@previous)  |  第 12 頁，共 18 頁  |  [下一頁：沒有名稱的引數](@next)
 */