/*:
## 穿衣服

 想像一下朋友邀請你去看電影。你睡過頭了，因此回覆說「電影院見，我穿好衣服就出門。」
 
 你的朋友了解你所說的「穿好衣服」，但並不知道詳細情況，像是你要穿哪件襯衫。
 
 現在回想一下你今天穿衣服時的所有細節：決定要穿什麼、從衣櫃或衣櫥中拿出衣服、逐一穿好每件衣服。
 
 「穿衣服」一詞看似簡單，但想想穿衣服時的每個細節，你就會了解到這些字所代表的複雜度。

 使用「穿衣服」一詞讓你能夠表示穿衣服的過程，而無須傳達每一個特定的細節。

 大家經常使用這樣的表達方式。「去看牙醫」、「做三明治」或「見面喝杯咖啡」等詞句所描述的活動，若要一步步詳加說明會非常繁瑣。
 
 在第 1 單元中，你學習到了「抽象」，這一種想法就是定義一個簡單的方法來處理複雜的事物，讓你不必思考細節。這個基本概念套用在軟體開發的話，就是指程式設計師如何避免被細節與複雜度困住。

 在本課程中，你將學習如何定義並使用函數，這是在程式碼中定義抽象的最基本方法之一。

 - callout(實驗：): 花幾分鐘想想有其他哪些簡單的詞句，可用來代表更複雜的活動或想法。

 接下來，我們來了解程式設計師如何使用簡單的詞句來代表更複雜的作業。

第 1 頁，共 12 頁  |  [下一頁：呼叫函數](@next)
 */