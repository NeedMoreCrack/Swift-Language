/*:
## 總結

 在大多數情況下，程式設計師可以使用 `Int` 和 `Double` 等有限類型，沒有後顧之憂。設想你正在管理收件匣裡的電子郵件數量、社交網路中的朋友人數，飛機的飛行速度，或是選舉結果的機率，這些統統都沒問題！但是你無法使用 `Int64` 來代表宇宙中大概的星星數量。
 
 `Int` 和 `Double`是很好的抽象概念範例，因為程式設計師不需要理解數字如何在電腦內部表達，也能使用數字來寫程式。但是抽象概念並不完美。(電腦科學家可能稱之為「漏洞的抽象概念」，因為內部細節可能會在某些情況下洩漏。)如果真的遇上這些限制，你的程式碼將無法正常運作，甚至會當機。
 
 要發現這類問題，可以進行程式碼測試。不過測試對於驗證「全部的」程式碼很重要。撰寫函數時，務必要使用定義好的輸入值撰寫測試，來確保函數可以產生預期結果。所有優秀的 app 開發者都使用測試結果來修正演算法或程式，讓它們更為完善。 
 
  _Copyright © 2021 Apple Inc._

 茲免費授權任何人均可取得本軟體及相關文件之副本 (以下稱「本軟體」)，可無限制交易本軟體 (包括但不限於使用、複製、修改、合併、發行、散佈、轉授權及 (或) 銷售本軟體之副本)，並允許接受本軟體之個人在下列條件下從事此類行為：

 本軟體之所有副本或重要部分均須載明上述版權聲明與本許可聲明。

 本軟體乃依「現況」提供，不含任何明示或默示擔保，包括但不限於適售性、符合特定目的及未侵權之瑕疵擔保。在任何情況下，對於因本軟體而起，或是與本軟體、使用本軟體或交易本軟體有關之任何索賠、損害或其他賠償責任，無論是出於合約之訴、侵權行為或其他形式的索賠，作者或著作權所有人概不負責。

[上一頁](@previous)  |  第 7 頁，共 7 頁
 */