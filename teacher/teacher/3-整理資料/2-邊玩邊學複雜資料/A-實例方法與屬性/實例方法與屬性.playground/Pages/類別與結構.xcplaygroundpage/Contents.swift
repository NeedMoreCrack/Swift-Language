/*:
## 類別與結構

 你在 Quick Help 或說明文件中查找 API 時，會看到類似以下針對 `String` 的類型宣告。\
 在面板頂端，你會看到 `struct String` 宣告：

 ![字串的 Quick Help 檢閱器面板](StringQuickHelp.png)

 當你開始研究其他架構時，會遇到類似以下針對 `UIColor` 的類型宣告：

 ![UIColor 的 Quick Help 檢閱器面板](UIColorQuickHelp.png)

 在 Swift 中構建 app 時，你將同時使用「structs」(「structures」的縮寫) 和「classes」的實例。這兩種方式都可在 Swift 中定義類型。
 
 到目前為止，只要知道結構和類別有許多相似點即可。

- 兩者都有實例
- 實例是使用初始化程式建立
- 兩者都可以有方法
- 兩者都可以有屬性

當你建立和使用實例時，無論類型是結構還是類別，你需要編寫的 Swift 程式碼都相同。
 
在剩下的課程中，你將進一步練習如何建立實例以及使用方法和屬性。在稍後的課程中，你還將學習如何定義自己的結構。探索類別和結構之間的差異已超出本課程的範圍，但是當你漸漸熟悉類別和結構的使用方式後，就會了解它們之間的差異。

 使用方法和屬性有什麼好處？
 
[上一頁](@previous)  |  第 12 頁，共 17 頁  |  [下一頁：為何使用方法與屬性？](@next)
 */